class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
               vector<vector<int>>ans;
        if(intervals.empty()){
            return ans;
        }
        sort(intervals.begin(),intervals.end());
        ans.push_back(intervals[0]);
        for(int i=1;i<intervals.size();i++){
            vector<int>current;
            if(ans.back()[1]>=intervals[i][0] && ans.back()[1]  <=intervals[i][1]){
        
                current.push_back(ans.back()[0]);
                current.push_back(intervals[i][1]);
                 ans.pop_back();
            }
            else if(ans.back()[1]>=intervals[i][0] && ans.back()[1]  >=intervals[i][1]){
                continue;
            }
            else{
                current.push_back(intervals[i][0]);
                current.push_back(intervals[i][1]);
            }
            ans.push_back(current);

        }
        return ans;
       
        
    }
};
